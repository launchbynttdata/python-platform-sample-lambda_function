name: Deploy Environment

on:
  workflow_call:
    inputs:
      tf_version:
          description: 'Version of Terraform to utilize'
          required: true
          default: '1.5.5'
          type: string
      tg_version:
        description: 'Version of Terragrunt to utilize'
        required: true
        default: '0.54.11'
        type: string
      environment:
        description: 'Environment (subfolder of platform, e.g. sandbox) to deploy'
        required: true
        type: string
      region:
        description: 'Region within the environment (e.g. us-east-1) to deploy'
        required: true
        type: string
      env_id:
        description: 'Instance within the region (e.g. 000) to deploy.'
        required: true
        type: string

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    name: "Plan & Deploy ${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f

      - name: "Validate GitHub Environment"
        run: |
          raised=0
          test -z "${{ vars.DEPLOY_ROLE_ARN }}" && (echo "::error title=Repository Configuration Incomplete::This repository is missing an environment variable for DEPLOY_ROLE_ARN in the ${{ inputs.environment }} environment!"; raised=1)
          exit $raised

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@a95656fcd9ec16a226c7099657b9fc91cc777601
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          role-session-name: ${{ github.run_id }}
          aws-region: ${{ inputs.region }}

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@aee21a7df999be8b471c2a8564c6cd853cb674e1
        env:
            AWS_REGION: ${{ inputs.region }}
            INPUT_PRE_EXEC_0: |
              sudo apt update -yqq && sudo apt install python3 -yqq
        with:
          tf_version: ${{ inputs.tf_version }}
          tg_version: ${{ inputs.tg_version }}
          tg_dir: 'platform/${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}'
          tg_command: 'plan -out=${{ inputs.environment }}-${{ inputs.region }}-${{ inputs.env_id }}.tfplan'

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@aee21a7df999be8b471c2a8564c6cd853cb674e1
        env:
          AWS_REGION: ${{ inputs.region }}
          TERRAFORM_PLAN: ${{ steps.plan.outputs.TERRAFORM_PLAN }}
          INPUT_PRE_EXEC_0: |
            sudo apt update -yqq && sudo apt install python3 -yqq
        with:
          tf_version: ${{ inputs.tf_version }}
          tg_version: ${{ inputs.tg_version }}
          tg_dir: 'platform/${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}'
          tg_command: 'apply ${{ inputs.environment }}-${{ inputs.region }}-${{ inputs.env_id }}.tfplan'

